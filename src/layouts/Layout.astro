---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="overflow-x-hidden">
		<header class=" z-10 sticky top-0 left-0  w-screen bg-gradient-to-r nav from-[#270e49] to-[#d6bbf8] h-20 text-white p-4 flex items-center justify-between">
			<a href="" class="logo z-30">
				<h3>Juan-Moreno</h3>
			</a>
			
			<div class="h-full sm:hidden">
				<a href="#" class="h-full" id="open">
					<img class="h-full" src="../../public/menu.png" class="nav_icon" >
				</a>
				<a href="#" class="h-full hidden close" id="close">
					<img class="h-full" src="../../public/cross.png" alt="">
				</a>
			</div>
			
			
			<div class="hidden fixed top-20 left-0 right-0 bottom-0 bg-[rgba(0,0,0,.5)] w-screen h-screen transition ease-in" id="fondo">
				<nav class=" z-10 grid fixed h-[calc(100vh-60px)]  top-20 bottom-0 right-0 place-items-center bg-[rgb(0,0,0)] clipeado transition ease-in" id="menu">
					<a href="#" class="nav__link text-3xl w-full h-full text-center hover:bg-slate-700   border-y-2 text-white">sobre mi</a>
					<a href="#" class="nav__link text-3xl w-full h-full text-center hover:bg-slate-700  border-y-2 text-white">proyectos</a>
					<a href="#" class="nav__link text-3xl w-full h-full text-center hover:bg-slate-700  border-y-2 text-white">reclutame</a>
					</nav>
				</div>
				<nav class=" nav-bar hidden  sm:flex flex-row  h-full items-center justify-between " id="menu">
					<a href="#" class=" text-white mx-2 z-30">sobre mi</a>
					<a href="#" class=" text-white mx-2 z-30">proyectos</a>
					<a href="#" class=" text-white mx-2 z-30">reclutame</a>
				</nav>
				<div id="menu-backdrop" class="
				absolute bg-black/5  rounded
				left-[var(--left)] top-[var(--top)]
				w-[var(--width)] h-[var(--height)]
				transition-all duration-300 ease-in-out opacity-0 z-0
				
			"></div>
			</header>
			<slot />
		</body>
		</html>
<script>
	const nav = document.getElementById('menu')
	const xClose = document.getElementById('close')
	const hamburguesa = document.getElementById('open')
	const fondo = document.getElementById('fondo')
	hamburguesa?.addEventListener('click',()=>{
		hamburguesa.classList.add('desaparecer');
		nav?.classList.add('abierto')
		xClose?.classList.add('aparecer')
		fondo?.classList.add('aparecer')
		
	})
	xClose?.addEventListener('click',()=>{

		hamburguesa?.classList.remove('desaparecer');
		nav?.classList.remove('abierto')
		xClose?.classList.remove('aparecer')
		fondo?.classList.remove('aparecer')
	})
	fondo?.addEventListener('click',()=>{

		hamburguesa?.classList.remove('desaparecer');
		nav?.classList.remove('abierto')
		xClose?.classList.remove('aparecer')
		fondo?.classList.remove('aparecer')
	})
	////////////////////////////////////////////////////////////////////////////
	const listItem = document.querySelectorAll('.nav-bar a, .logo');
				const menuBackdrop = document.querySelector('#menu-backdrop');
				let timeoutId;
			
				listItem.forEach((item) => {
					item.addEventListener('mouseenter', () => {
						const { left, top, width, height, clientHeight, clientWidth } = item.getBoundingClientRect();
			
						menuBackdrop.style.setProperty("--left", `${left}px`);
						menuBackdrop.style.setProperty("--top", `${top}px`);
						menuBackdrop.style.setProperty("--height", `${height}px`);
						menuBackdrop.style.setProperty("--width", `${width}px`);
			
						menuBackdrop.style.opacity = '1';
						menuBackdrop.style.visibility = 'visible';
			
						// Cancela cualquier timeout existente
						clearTimeout(timeoutId);
					});
			
					item.addEventListener('mouseleave', () => {
						// Espera 200 ms antes de ocultar el fondo
						timeoutId = setTimeout(() => {
							menuBackdrop.style.opacity = '0';
							menuBackdrop.style.visibility = 'hidden';
						}, 200);
					});
				});
			
				// Cancela el timeout si el mouse vuelve a entrar antes de que se oculte
				menuBackdrop.addEventListener('mouseenter', () => {
					clearTimeout(timeoutId);
				});
			
				// Oculta el fondo si el mouse sale completamente de la barra de navegaciÃ³n
				menuBackdrop.addEventListener('mouseleave', () => {
					menuBackdrop.style.opacity = '0';
					menuBackdrop.style.visibility = 'hidden';
				});
			</script>
</script>
<style is:global>
	:root {
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
	}

	html {
		font-family: system-ui, sans-serif;
		background: #13151a;
		background-size: 224px;
	}
	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}
	.clipeado{
		clip-path: circle(0% at top right);
		transition: clip-path .4s;
	}
	.clipeado.abierto{
		clip-path: circle(150% at top right);
		@apply w-[70%];
		transition: clip-path .4s;

	}
	.aparecer{
		display: block;
		transition: transform .4s;
	}
	.desaparecer{
		display: none;
		transition: transform .4s;
	}

</style>
